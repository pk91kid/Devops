name: Terraform PR Check

on:
  pull_request:
    paths:
      - 'Terraform/**'

jobs:
  terraform-plan:
    name: Terraform Plan Check
    runs-on: ubuntu-latest
    if: github.event.pull_request # Ensures this only runs on PRs

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
           fetch-depth: 0
           fetch-tags: false   
      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }}
      - name: Fetch head branch
        run: git fetch origin ${{ github.head_ref }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name:Find changed Terraform folders
        id: changed_dirs
        run: |
          echo "Finding changed Terraform folders..."
          changed_dirs=$(git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }} | grep '^Terraform/' | awk -F/ '{print $2}' | sort -u | uniq)
          echo "Changed directories:"
          echo "$changed_dirs"
          echo "CHANGED_DIRS=$changed_dirs" >> $GITHUB_ENV

      - name: Run Terraform plan for each folder
        id: tf_plan
        run: |
          result=""
          for dir in ${{ steps.find_dirs.outputs.dirs }}; do
            echo "Running terraform in Terraform/$dir"
            cd Terraform/$dir
            terraform init -input=false
            plan_output=$(terraform plan -no-color)
            result+="## Terraform Plan for \`$dir\`\n\`\`\`\n$plan_output\n\`\`\`\n"
            cd - > /dev/null
          done
          echo "$result" > tf_plan_output.txt
          echo "::set-output name=comment_body::$result"

      - name: Comment on PR with plan output
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          comment=$(cat tf_plan_output.txt | jq -Rs .)
          curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"body\": $comment}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
