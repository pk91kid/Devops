name: Terraform PR Check

on:
  pull_request:
    paths:
      - 'Terraform/**'

jobs:
  terraform-plan:
    name: Terraform Plan Check
    runs-on: ubuntu-latest
    if: github.event.pull_request

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }}

      - name: Fetch head branch
        run: git fetch origin ${{ github.head_ref }}

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Find changed Terraform folders
        id: changed_dirs
        run: |
          echo "Finding changed Terraform folders..."
          changed_dirs=$(git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }} \
            | grep '^Terraform/' | awk -F/ '{print $2}' | sort -u | uniq)
          echo "Changed directories:"
          echo "$changed_dirs"
          echo "CHANGED_DIRS=$changed_dirs" >> $GITHUB_ENV

      - name: Run terraform plan and collect outputs
        if: env.CHANGED_DIRS != ''
        run: |
          result=""
          for dir in $CHANGED_DIRS; do
            echo "Running terraform in Terraform/$dir"
            cd Terraform/$dir
            terraform init -input=false
            plan_output=$(terraform plan -no-color)
            result+="## Terraform Plan for \`$dir\`\n\`\`\`\n$plan_output\n\`\`\`\n"
            cd - > /dev/null
          done
          echo -e "$result" > tf_plan_output.txt
        shell: bash

      - name: Post terraform plan as PR comment
        if: env.CHANGED_DIRS != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
        run: |
          echo -e "Hello @${PR_AUTHOR}, please have a look at the Terraform plan below:\n\n$(cat tf_plan_output.txt)" > tf_plan_output.txt

          comment_body=$(jq -Rs . < tf_plan_output.txt)

          curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"body\": $comment_body}" \
            "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments"
